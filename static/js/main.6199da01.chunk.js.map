{"version":3,"sources":["routes/Activity/Activity.module.css","routes/Anime/Anime.module.css","components/EpisodeList/EpisodeList.module.css","routes/Home/Home.module.css","components/AnimeList/AnimeList.module.css","components/Header/Header.module.css","routes/Register/Register.module.css","routes/Login/Login.module.css","routes/AddAnime/AddAnime.module.css","routes/AddEpisodes/AddEpisodes.module.css","components/Button/Button.module.css","components/AnimeList/AnimeList.js","components/Button/Button.js","routes/Home/Home.js","routes/Activity/Activity.js","components/EpisodeList/EpisodeList.js","routes/Anime/Anime.js","components/Input/Input.js","routes/AddAnime/AddAnime.js","routes/AddEpisodes/AddEpisodes.js","routes/Register/Register.js","routes/Login/Login.js","components/Header/Header.js","App.js","constants/constants.js","serviceWorker.js","index.js"],"names":["module","exports","AnimeList","animes","this","props","className","s","root","map","anime","to","_id","toString","key","animeName","name","animeEpisodes","watched","episode_total","Component","Button","onClick","bind","join","children","Home","header","text","padding","groupBy","array","f","groups","forEach","o","group","JSON","stringify","push","Object","keys","calendarFormat","arr","values","date","watchedAt","toLocaleDateString","count","x","currentDate","selectByDate","length","Activity","componentDidMount","a","displayEpisodes","sort","res","feed","item","anime_id","calendarData","setState","calendarLabels","createFeed","squareClick","value","day","Date","nextDay","getFullYear","getMonth","getDate","$gte","$lt","state","mouseOver","mousePosition","hovering","selectedDate","style","left","top","tooltip","row","tooltipText","headerText","e","target","currentTarget","calendar","startDate","endDate","gutterSize","onMouseOver","event","clientX","clientY","onMouseLeave","classForValue","transformDayElement","element","index","React","cloneElement","rx","EpisodeList","episodes","toggleEpisode","episode","episodeName","Anime","id","URLSearchParams","location","search","get","objectId","BSON","ObjectId","displayAnimes","delete","deleting","deleteAnime","home","episodeId","description","deleteColumn","Input","onChange","preventDefault","placeholder","type","AddAnime","addAnime","changeEpisodes","isNaN","AddEpisodes","watchEpisodes","parseInt","Login","register","registerUser","email","password","passwordVerification","error","stack","message","console","log","toLogin","login","loginUser","catch","err","buttons","Header","logo","isAuthed","logoutFunc","logout","client","Stitch","hasAppClient","getAppClient","initializeAppClient","mongoClient","getServiceClient","RemoteMongoClient","factory","App","auth","hasRedirectResult","handleRedirectResult","then","user","isLoggedIn","db","collection","insertOne","owner_id","userId","addEpisodes","insertedId","deleteOne","deleteMany","incrementWatched","updateOne","$inc","params","find","limit","asArray","i","insertMany","displayed","projection","$set","selection","ids","updateMany","$in","registerWithEmail","credential","UserPasswordCredential","loginWithCredential","from","default","exact","path","render","episodeStream","Register","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6199da01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Activity_root__3Ogef\",\"header\":\"Activity_header__2zif8\",\"headerText\":\"Activity_headerText__l1xHY\",\"padding\":\"Activity_padding__3-Gep\",\"feed\":\"Activity_feed__yzqNn\",\"row\":\"Activity_row__XVWXi\",\"text\":\"Activity_text__3_K9X\",\"date\":\"Activity_date__1i1lt\",\"calendar\":\"Activity_calendar__VOhm7\",\"calendarDot\":\"Activity_calendarDot__QyWRC\",\"color-empty\":\"Activity_color-empty__15nMc\",\"color-scale-1\":\"Activity_color-scale-1__3SJPi\",\"color-scale-2\":\"Activity_color-scale-2__1YEBv\",\"color-scale-3\":\"Activity_color-scale-3__1pYqc\",\"color-scale-4\":\"Activity_color-scale-4__1SLZq\",\"color-scale-5\":\"Activity_color-scale-5__2D4vF\",\"color-scale-6\":\"Activity_color-scale-6__HkT9B\",\"color-scale-dark\":\"Activity_color-scale-dark__3_MfN\",\"tooltip\":\"Activity_tooltip__2DkRG\",\"tooltipText\":\"Activity_tooltipText__c8Pon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Anime_root__16GQj\",\"header\":\"Anime_header__1yIwg\",\"description\":\"Anime_description__2zCjd\",\"name\":\"Anime_name__IJM8J\",\"watched\":\"Anime_watched__2bkKN\",\"deleteColumn\":\"Anime_deleteColumn__3NnRr\",\"deleting\":\"Anime_deleting__3j07-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EpisodeList_root__2LNOP\",\"episode\":\"EpisodeList_episode__uydlO\",\"episodeName\":\"EpisodeList_episodeName__1puF4\",\"watchedAt\":\"EpisodeList_watchedAt__1QoZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__2uR89\",\"header\":\"Home_header__348Nd\",\"text\":\"Home_text__FE-HM\",\"padding\":\"Home_padding__1Stm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AnimeList_root__Q_kjR\",\"anime\":\"AnimeList_anime__1SRSM\",\"animeName\":\"AnimeList_animeName__1kJKu\",\"animeEpisodes\":\"AnimeList_animeEpisodes__2dqWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2R_Rn\",\"logo\":\"Header_logo__3_SJs\",\"buttons\":\"Header_buttons__12gv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Register_root__2C-FL\",\"text\":\"Register_text__1K0oy\",\"error\":\"Register_error__1s96k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__4bv6e\",\"text\":\"Login_text__26fLU\",\"error\":\"Login_error__2Rc1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddAnime_root__3ZKlg\",\"text\":\"AddAnime_text__3sfGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddEpisodes_root__1sewz\",\"text\":\"AddEpisodes_text__YZvIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2bb-J\"};","import React, { Component } from 'react';\nimport s from './AnimeList.module.css';\nimport { Link } from \"react-router-dom\";\n\nclass AnimeList extends Component {\n  render() {\n    const { animes } = this.props;\n    return (\n      <div className={s.root}>\n        {animes && animes.map(anime => (\n          <Link to={`/anime?id=${anime._id.toString()}`} key={anime._id.toString()} className={s.anime}>\n            <div className={s.animeName}>{anime.name}</div>\n            <div className={s.animeEpisodes}>{anime.watched} / {anime.episode_total}</div>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AnimeList;","import React, { Component } from 'react';\nimport s from './Button.module.css';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.props.onClick && this.props.onClick();\n  }\n\n  render() {\n    return (\n      <button onClick={this.onClick} className={[s.root, this.props.className].join(' ')}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\nexport default Button;","import React, { Component } from 'react';\nimport s from './Home.module.css';\nimport AnimeList from '../../components/AnimeList/AnimeList';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className={s.root}>\n        <div className={s.header}>\n          <div className={s.text}>Your List</div>\n          <Link className={s.padding} to=\"/addanime\">\n            <Button>Add another</Button>\n          </Link>\n        </div>\n        <AnimeList animes={this.props.animes} />\n      </div>\n    );\n  }\n}\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport s from './Activity.module.css';\n\nconst groupBy = (array, f) => {\n  let groups = {};\n  array.forEach(function (o) {\n    let group = JSON.stringify(f(o));\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map(function (group) {\n    return groups[group];\n  })\n}\n\nconst calendarFormat = arr => {\n  const values = [];\n\n  let date = arr[0].watchedAt.toLocaleDateString('en-US');\n  let count = 0;\n  arr.forEach(x => {\n    const currentDate = x.watchedAt.toLocaleDateString('en-US');\n    if (date !== currentDate) {\n      values.push({ date, count });\n      date = currentDate;\n      count = 1;\n    } else {\n      count++;\n    }\n  });\n\n  values.push({ date, count });\n  return values;\n}\n\nconst selectByDate = (arr, date) => {\n  const watched = [];\n  arr.forEach(x => {\n    if (x[0].watchedAt.toLocaleDateString('en-US') === date) {\n      watched.push({ anime: x[0].name, count: x.length, date });\n    }\n  });\n\n  return watched;\n}\n\nclass Activity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      feed: [],\n      calendarLabels: [],\n      calendarData: [],\n      mouseOver: [],\n      mousePosition: [0, 0],\n      hovering: false,\n      selectedDate: null,\n    }\n  }\n\n  componentDidMount = async () => {\n    const res = await this.props.displayEpisodes(\n      { watched: true },\n      { sort: { watchedAt: -1 } },\n    );\n\n    const feed = res.length && groupBy(res, function (item) {\n      return [item.anime_id, item.watchedAt.toLocaleDateString('en-US')];\n    });\n\n    const calendarData = res.length && calendarFormat(res);\n    this.setState({ feed, calendarData, calendarLabels: feed });\n  }\n\n  createFeed = async (date = {}) => {\n    const res = await this.props.displayEpisodes(\n      { ...date, watched: true },\n      { sort: { watchedAt: -1 } },\n    );\n\n    return res.length && groupBy(res, function (item) {\n      return [item.anime_id, item.watchedAt.toLocaleDateString('en-US')];\n    });\n  }\n\n  squareClick = async value => {\n    if (!value) {\n      const feed = await this.createFeed();\n      return this.setState({ feed });\n    }\n\n    const day = new Date(value.date);\n    const nextDay = new Date(day.getFullYear(), day.getMonth(), day.getDate() + 1);\n\n    const feed = await this.createFeed({\n      watchedAt: {\n        $gte: day,\n        $lt: nextDay,\n      }\n    });\n\n    this.setState({ feed });\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.hovering && (\n          <div\n            style={{\n              left: this.state.mousePosition[0],\n              top: this.state.mousePosition[1],\n            }}\n            className={s.tooltip}\n          >\n            {this.state.mouseOver && this.state.mouseOver.map(row => (\n              <div key={`${row.anime} - ${row.date}`} className={s.tooltipText}>\n                {row.count} episodes of {row.anime}\n                <span> on {row.date}</span>\n              </div>\n            ))}\n          </div>\n        )}\n        <div className={s.header}>\n          <div className={s.headerText}>Activity Feed</div>\n        </div>\n        <div onClick={(e) => { e.target === e.currentTarget && this.squareClick() }}>\n          <div\n            onClick={(e) => { e.target === e.currentTarget && this.squareClick() }}\n            className={s.calendar}\n          >\n            <CalendarHeatmap\n              startDate={new Date(`1/1/${new Date().getFullYear()}`)}\n              endDate={new Date(`1/1/${new Date().getFullYear() + 1}`)}\n              values={(this.state.calendarData.length && this.state.calendarData) || [{ date: new Date('1/1/1990'), count: 1 }]}\n              gutterSize={3}\n              onMouseOver={(event, value) => (\n                value && this.setState({\n                  hovering: true,\n                  mouseOver: selectByDate(this.state.calendarLabels, value.date),\n                  mousePosition: [event.clientX, event.clientY]\n                })\n              )}\n              onMouseLeave={() => this.setState({ hovering: false })}\n              onClick={value => this.squareClick(value)}\n              classForValue={value => {\n                if (!value) {\n                  return s['color-empty'];\n                }\n\n                if (value.count > 6) {\n                  return s['color-scale-dark'];\n                }\n\n                return s[`color-scale-${value.count}`];\n              }}\n              transformDayElement={(element, value, index) => (\n                React.cloneElement(element, { rx: '100%' })\n              )}\n            />\n          </div>\n        </div>\n        <div className={s.feed}>\n          {this.state.feed.length && this.state.feed.map(group => (\n            <div key={group[0]._id} className={s.row}>\n              <div className={s.text}>\n                {`Watched ${group.length} episodes of `}\n                <Link to={`/anime?id=${group[0].anime_id.toString()}`}>\n                  {group[0].name}\n                </Link>.\n              </div>\n              <div className={s.date}>\n                {group[0].watchedAt.toLocaleDateString(\"en-US\")}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Activity;","import React, { Component } from 'react';\nimport s from './EpisodeList.module.css';\nimport { FaCheck } from 'react-icons/fa';\n\nclass EpisodeList extends Component {\n  render() {\n    const { episodes, toggleEpisode } = this.props;\n    return (\n      <div className={s.root}>\n        {episodes && episodes.map(episode => (\n          <div\n            onClick={() => toggleEpisode(episode.anime_id, episode._id, episode.watched)}\n            key={episode.episode}\n            className={s.episode}\n          >\n            <div className={s.text}>\n              <div className={s.episodeName}>Episode {episode.episode}</div>\n              <div className={s.watchedAt}>\n                {episode.watched && `Watched on ${episode.watchedAt.toLocaleDateString(\"en-US\")}`}\n              </div>\n            </div>\n            {episode.watched &&<FaCheck />}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default EpisodeList;","import React, { Component } from 'react';\nimport { BSON } from \"mongodb-stitch-browser-sdk\";\nimport { Redirect } from \"react-router-dom\";\nimport s from './Anime.module.css';\nimport EpisodeList from '../../components/EpisodeList/EpisodeList';\nimport Button from '../../components/Button/Button';\n\nclass Anime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anime: {},\n      episodes: [],\n      home: false,\n      deleting: false,\n    };\n\n    this.delete = this.delete.bind(this);\n    this.toggleEpisode = this.toggleEpisode.bind(this);\n  }\n\n  componentDidMount = async () => {\n    const id = new URLSearchParams(this.props.location.search).get('id');\n    const objectId = new BSON.ObjectId(id);\n    const [ anime ] = await this.props.displayAnimes({ _id: objectId });\n\n    const episodes = await this.props.displayEpisodes({ anime_id: objectId });\n    this.setState({ anime, episodes });\n  }\n\n  delete = async () => {\n    this.setState({ deleting: true });\n\n    await this.props.deleteAnime(this.state.anime._id);\n\n    this.setState({ home: true, deleting: false })\n  }\n\n  toggleEpisode = async (anime_id, episodeId, watched) => {\n    // TODO: watched on specific date\n    const { _id } = this.state.anime;\n    await this.props.toggleEpisode(anime_id, episodeId, watched);\n    const episodes = await this.props.displayEpisodes({ anime_id: _id });\n    const [ anime ] = await this.props.displayAnimes({ _id });\n    this.setState({ anime, episodes });\n  }\n\n  render() {\n    const { anime, episodes, home, deleting } = this.state;\n\n    return (\n      <div className={s.root}>\n        {home && <Redirect to=\"/\" />}\n        <div className={s.header}>\n          <div className={s.description}>\n            <div className={s.name}>{anime.name}</div>\n            <div className={s.watched}>\n              {anime.watched} / {anime.episode_total} watched\n            </div>\n          </div>\n          <div className={s.deleteColumn}>\n            <Button onClick={this.delete}>Delete</Button>\n            {deleting && <div className={s.deleting}>Deleting anime..</div>}\n          </div>\n        </div>\n        <EpisodeList\n          toggleEpisode={this.toggleEpisode}\n          episodes={episodes}\n        />\n      </div>\n    );\n  }\n}\nexport default Anime;","import React, { Component } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport s from './Input.module.css';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange = e => {\n    e.preventDefault();\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <input\n        onChange={this.onChange}\n        placeholder={this.props.placeholder}\n        type={this.props.type || 'text'}\n        value={this.props.value}\n      />\n    );\n  }\n}\nexport default Input;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './AddAnime.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass AddAnime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      episodes: '',\n      home: false,\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.changeEpisodes = this.changeEpisodes.bind(this);\n  }\n\n  onClick = async () => {\n    const { name, episodes } = this.state;\n    await this.props.addAnime({ name, episodes });\n\n    this.setState({ home: true });\n  }\n\n  changeEpisodes = episodes => {\n    if (!isNaN(episodes)) {\n      this.setState({ episodes });\n    }\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.home && <Redirect to=\"/list\" />}\n        <div className={s.text}>\n          Add an anime\n        </div>\n        <Input\n          onChange={name => this.setState({ name })}\n          placeholder=\"Name\"\n          type=\"text\"\n          value={this.state.name}\n        />\n        <Input\n          onChange={this.changeEpisodes}\n          placeholder=\"# Episodes Total\"\n          type=\"text\"\n          value={this.state.episodes}\n        />\n        <Button onClick={this.onClick}>Add anime</Button>\n      </div>\n    );\n  }\n}\nexport default AddAnime;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './AddEpisodes.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass AddEpisodes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      date: '',\n      episodes: '',\n      home: false,\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick = async () => {\n    const { name, date, episodes } = this.state;\n    \n    const [ anime ] = await this.props.displayAnimes({ name });\n    await this.props.watchEpisodes(anime._id, parseInt(episodes), new Date(date));\n\n    this.setState({ home: true });\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.home && <Redirect to=\"/\" />}\n        <div className={s.text}>\n          Add episodes\n        </div>\n        <Input\n          onChange={name => this.setState({ name })}\n          placeholder=\"Anime\"\n          type=\"text\"\n          value={this.state.name}\n        />\n        <Input\n          onChange={episodes => this.setState({ episodes })}\n          placeholder=\"Episodes watched\"\n          value={this.state.episodes}\n        />\n        <Input\n          onChange={date => this.setState ({ date })}\n          placeholder=\"Date watched (MM/DD/YYYY)\"\n          type=\"text\"\n          value={this.state.date}\n        />\n        <Button onClick={this.onClick}>Add episodes</Button>\n      </div>\n    );\n  }\n}\nexport default AddEpisodes;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './Register.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordVerification: '',\n      error: null,\n      toLogin: false,\n    };\n\n    this.register = this.register.bind(this);\n  }\n\n  register = async () => {\n    const { registerUser } = this.props;\n    const { email, password, passwordVerification } = this.state;\n\n    if (password !== passwordVerification) {\n      this.setState({ error: 'Passwords do not match' });\n\n      return;\n    }\n\n    const res = await registerUser({ email, password })\n\n    if (res && res.stack && res.message) {\n      this.setState({ error: res.message});\n\n      return;\n    }\n\n    console.log(res);\n\n    this.setState({ toLogin: true });\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.toLogin && <Redirect to=\"/login\" />}\n        <div className={s.text}>\n          Create a new account\n        </div>\n        <Input\n          onChange={email => this.setState({ email })}\n          placeholder=\"Email\"\n          type=\"text\"\n          value={this.state.email}\n        />\n        <Input\n          onChange={password => this.setState({ password })}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n        />\n        <Input\n          onChange={passwordVerification => this.setState({ passwordVerification })}\n          placeholder=\"Verify password\"\n          type=\"password\"\n          value={this.state.passwordVerification}\n        />\n        <Button onClick={this.register}>Sign in</Button>\n        {this.state.error &&\n          <div className={s.error}>{this.state.error}</div>\n        }\n      </div>\n    );\n  }\n}\nexport default Login;","import React, { Component } from 'react';\nimport s from './Login.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.login = this.login.bind(this);\n  }\n\n  login = () => {\n    const { loginUser } = this.props;\n    const { email, password } = this.state;\n\n    loginUser({ email, password }).catch(err => {\n      this.setState({ error: err.message })\n    })\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        <div className={s.text}>\n          Sign in\n        </div>\n        <Input\n          onChange={email => this.setState({ email })}\n          placeholder=\"Email\"\n          type=\"text\"\n          value={this.state.email}\n        />\n        <Input\n          onChange={password => this.setState({ password })}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n        />\n        <Button onClick={this.login}>Sign in</Button>\n        {this.state.error &&\n          <div className={s.error}>{this.state.error}</div>\n        }\n      </div>\n    );\n  }\n}\nexport default Login;","import React, { Component } from 'react';\nimport s from './Header.module.css';\nimport { Link } from \"react-router-dom\";\n\nconst logout = logoutFunc => (\n  <div className={s.buttons}>\n    <Link to=\"/\">My Feed</Link>\n    <Link to=\"/List\">My List</Link>\n    <Link to=\"/AddAnime\">Add Anime</Link>\n    <Link to=\"/AddEpisodes\">Add Episodes</Link>\n    <div onClick={() => logoutFunc()} >Logout</div>\n  </div>\n);\n\nconst login = (\n  <div className={s.buttons}>\n    <Link to=\"/login\">Login</Link>\n    <Link to=\"/register\">Register</Link>\n  </div>\n);\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className={s.root}>\n        <Link to=\"/\" className={s.logo}>Sugoi</Link>\n        {this.props.isAuthed ? logout(this.props.logout) : login}\n      </div>\n    );\n  }\n}\nexport default Header;","import React, { Component } from \"react\";\nimport { BSON, Stitch, RemoteMongoClient, UserPasswordCredential } from \"mongodb-stitch-browser-sdk\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport APP_ID from './constants/constants';\nimport Home from \"./routes/Home/Home\";\nimport Activity from \"./routes/Activity/Activity\";\nimport Anime from \"./routes/Anime/Anime\";\nimport AddAnime from \"./routes/AddAnime/AddAnime\";\nimport AddEpisodes from \"./routes/AddEpisodes/AddEpisodes\";\nimport Register from \"./routes/Register/Register\";\nimport Login from \"./routes/Login/Login\";\nimport Header from \"./components/Header/Header\";\n\nconst client = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nconst mongoClient = client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      animes: [],\n      isAuthed: false,\n      userId: null,\n    };\n\n    this.db = mongoClient.db(\"sugoi\");\n\n    this.register = this.register.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayEpisodes = this.displayEpisodes.bind(this);\n    this.displayAnimes = this.displayAnimes.bind(this);\n    this.addAnime = this.addAnime.bind(this);\n    this.deleteAnime = this.deleteAnime.bind(this);\n  }\n\n  componentDidMount = async () => {\n    if (client.auth.hasRedirectResult()) {\n      client.auth.handleRedirectResult().then(user => {\n        this.setState({ isAuthed: client.auth.isLoggedIn })\n      })\n    }\n  }\n\n  addAnime = async anime => {\n    // insert the anime into the remote Stitch DB\n    // then re-query the DB and display the new animes\n    const res = await this.db\n      .collection('animes')\n      .insertOne({\n        owner_id: this.state.userId,\n        name: anime.name,\n        watched: 0,\n        episode_total: parseInt(anime.episodes),\n      });\n\n    await this.addEpisodes(res.insertedId, anime.name, anime.episodes);\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n\n    return res;\n  }\n\n  deleteAnime = async _id => {\n    // delete animes and episodes with _id\n    await this.db\n      .collection('animes')\n      .deleteOne({ _id });\n\n    await this.db\n      .collection('episodes')\n      .deleteMany({ anime_id: _id });\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n  }\n\n  incrementWatched = async (_id, count) => {\n    const res = await this.db\n      .collection('animes')\n      .updateOne( { _id }, { $inc: { watched: count } } )\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n\n    return res;\n  }\n\n  displayAnimes = async (params = {}) => {\n    // query the remote DB and update the component state\n    const animes = await this.db\n      .collection('animes')\n      .find({ ...params, owner_id: this.state.userId }, { limit: 1000 })\n      .asArray();\n\n    return animes;\n  }\n\n  addEpisodes = async (anime_id, name, episode_total) => {\n    // create array of episodes then insert them into collection episodes\n    const episodes = [];\n\n    for (let i = 1; i <= episode_total; i++) {\n      const episode = {\n        anime_id,\n        name,\n        owner_id: this.state.userId,\n        episode: i,\n        watched: false,\n        watchedAt: new Date(),\n      };\n\n      episodes.push(episode);\n    }\n\n    await this.db\n      .collection('episodes')\n      .insertMany(episodes);\n\n    const displayed = await this.displayEpisodes({ anime_id });\n\n    return displayed\n  }\n\n  displayEpisodes = async (params = {}, projection = {}) => {\n    const episodes = await this.db\n      .collection('episodes')\n      .find({ ...params, owner_id: this.state.userId }, { ...projection, limit: 1000 })\n      .asArray();\n\n    return episodes;\n  }\n\n  toggleEpisode = async (anime_id, _id, watched) => {\n    const res = await this.db\n      .collection('episodes')\n      .updateOne({ _id }, { $set: { watched: !watched, watchedAt: new Date() } });\n\n    await this.incrementWatched(anime_id, watched ? -1 : 1);\n\n    return res;\n  }\n\n  watchEpisodes = async (anime_id, count, watchedAt = new Date()) => {\n    const selection = await this.db\n      .collection('episodes')\n      .find({ anime_id, watched: false }, { limit: count })\n      .asArray();\n    \n    const ids = selection.map(x => x._id);\n\n    await this.db\n      .collection('episodes')\n      .updateMany({ _id: {$in: ids} }, { $set: { watched: true, watchedAt } });\n\n    await this.incrementWatched(anime_id, count);\n  }\n\n  register = async ({ email, password } = {}) => {\n    try {\n      const res = await mongoClient.registerWithEmail(email, password);\n\n      return res;\n    } catch (e) {\n        return e;\n    }\n  }\n\n  login = async ({ email, password } = {}) => {\n    const { isAuthed } = this.state\n\n    if (isAuthed) {\n      return;\n    }\n\n    const credential = new UserPasswordCredential(email, password)\n    const res = await client.auth.loginWithCredential(credential)\n\n    this.setState({\n      isAuthed: true,\n      userId: new BSON.ObjectId(res.id),\n    })\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n  }\n\n  logout = async () => {\n    client.auth.logout()\n    this.setState({ isAuthed: false })\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header isAuthed={this.state.isAuthed} logout={this.logout} />\n        {this.state.isAuthed ? (\n            <Switch>\n              <Redirect from=\"/login\" to=\"/\" />\n              <Redirect from=\"/register\" to=\"/\" />\n              <Route\n                default\n                exact\n                path=\"/\"\n                render={props => <Activity\n                  {...props}\n                  displayEpisodes={this.displayEpisodes}\n                />}\n              />\n              <Route\n                path=\"/list\"\n                render={props => <Home\n                  {...props}\n                  episodeStream={this.episodeStream}\n                  animes={this.state.animes}\n                />}\n              />\n              <Route\n                path=\"/anime\"\n                render={props => <Anime\n                  {...props}\n                  toggleEpisode={this.toggleEpisode}\n                  displayAnimes={this.displayAnimes}\n                  displayEpisodes={this.displayEpisodes}\n                  deleteAnime={this.deleteAnime}\n                />}\n              />\n              <Route\n                path=\"/addanime\"\n                render={props => <AddAnime\n                  {...props}\n                  addAnime={this.addAnime}\n                />}\n              />\n              <Route\n                path=\"/addepisodes\"\n                render={props => <AddEpisodes\n                  {...props}\n                  watchEpisodes={this.watchEpisodes}\n                  displayAnimes={this.displayAnimes}\n                />}\n              />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route\n                default\n                exact\n                path=\"/login\"\n                render={props => <Login {...props} loginUser={this.login} />}\n              />\n              <Route\n                path=\"/register\"\n                render={props => <Register {...props} registerUser={this.register} />}\n              />\n            </Switch>\n        )}\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","const APP_ID = 'sago-ghffe';\n\nexport default APP_ID;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
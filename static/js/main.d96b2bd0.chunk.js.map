{"version":3,"sources":["routes/Activity/Activity.module.css","routes/Anime/Anime.module.css","components/EpisodeList/EpisodeList.module.css","routes/Home/Home.module.css","components/AnimeList/AnimeList.module.css","components/Header/Header.module.css","routes/Register/Register.module.css","routes/Login/Login.module.css","routes/AddAnime/AddAnime.module.css","routes/AddEpisodes/AddEpisodes.module.css","components/Button/Button.module.css","components/AnimeList/AnimeList.js","components/Button/Button.js","routes/Home/Home.js","routes/Activity/Activity.js","components/EpisodeList/EpisodeList.js","routes/Anime/Anime.js","components/Input/Input.js","routes/AddAnime/AddAnime.js","routes/AddEpisodes/AddEpisodes.js","routes/Register/Register.js","routes/Login/Login.js","components/Header/Header.js","App.js","constants/constants.js","serviceWorker.js","index.js"],"names":["module","exports","AnimeList","animes","this","props","className","s","root","map","anime","to","_id","toString","key","animeName","name","animeEpisodes","watched","episode_total","Component","Button","onClick","bind","join","children","Home","header","text","padding","groupBy","array","f","groups","forEach","o","group","JSON","stringify","push","Object","keys","calendarFormat","arr","values","date","watchedAt","toLocaleDateString","count","x","currentDate","selectByDate","length","Activity","componentDidMount","a","displayActivity","res","feed","item","anime_id","calendarData","setState","state","mouseOver","mousePosition","hovering","style","left","top","tooltip","row","tooltipText","calendar","startDate","Date","setMonth","getMonth","endDate","gutterSize","onMouseOver","event","value","clientX","clientY","onMouseLeave","classForValue","transformDayElement","element","index","React","cloneElement","rx","headerText","EpisodeList","episodes","toggleEpisode","episode","episodeName","Anime","id","URLSearchParams","location","search","get","objectId","BSON","ObjectId","displayAnimes","displayEpisodes","delete","deleting","deleteAnime","home","episodeId","description","deleteColumn","Input","onChange","e","preventDefault","target","placeholder","type","AddAnime","addAnime","changeEpisodes","isNaN","AddEpisodes","watchEpisodes","parseInt","Login","register","registerUser","email","password","passwordVerification","error","stack","message","console","log","toLogin","login","loginUser","catch","err","buttons","Header","logo","isAuthed","logoutFunc","logout","client","Stitch","hasAppClient","getAppClient","initializeAppClient","mongoClient","getServiceClient","RemoteMongoClient","factory","App","auth","hasRedirectResult","handleRedirectResult","then","user","isLoggedIn","db","collection","insertOne","owner_id","userId","addEpisodes","insertedId","deleteOne","deleteMany","incrementWatched","updateOne","$inc","params","find","limit","asArray","i","insertMany","displayed","$set","selection","ids","updateMany","$in","sort","registerWithEmail","credential","UserPasswordCredential","loginWithCredential","from","default","exact","path","render","episodeStream","Register","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d96b2bd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Activity_root__3Ogef\",\"header\":\"Activity_header__2zif8\",\"headerText\":\"Activity_headerText__l1xHY\",\"padding\":\"Activity_padding__3-Gep\",\"feed\":\"Activity_feed__yzqNn\",\"row\":\"Activity_row__XVWXi\",\"text\":\"Activity_text__3_K9X\",\"date\":\"Activity_date__1i1lt\",\"calendar\":\"Activity_calendar__VOhm7\",\"calendarDot\":\"Activity_calendarDot__QyWRC\",\"color-empty\":\"Activity_color-empty__15nMc\",\"color-scale-1\":\"Activity_color-scale-1__3SJPi\",\"color-scale-2\":\"Activity_color-scale-2__1YEBv\",\"color-scale-3\":\"Activity_color-scale-3__1pYqc\",\"color-scale-4\":\"Activity_color-scale-4__1SLZq\",\"color-scale-5\":\"Activity_color-scale-5__2D4vF\",\"color-scale-6\":\"Activity_color-scale-6__HkT9B\",\"color-scale-dark\":\"Activity_color-scale-dark__3_MfN\",\"tooltip\":\"Activity_tooltip__2DkRG\",\"tooltipText\":\"Activity_tooltipText__c8Pon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Anime_root__16GQj\",\"header\":\"Anime_header__1yIwg\",\"description\":\"Anime_description__2zCjd\",\"name\":\"Anime_name__IJM8J\",\"watched\":\"Anime_watched__2bkKN\",\"deleteColumn\":\"Anime_deleteColumn__3NnRr\",\"deleting\":\"Anime_deleting__3j07-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"EpisodeList_root__2LNOP\",\"episode\":\"EpisodeList_episode__uydlO\",\"episodeName\":\"EpisodeList_episodeName__1puF4\",\"watchedAt\":\"EpisodeList_watchedAt__1QoZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__2uR89\",\"header\":\"Home_header__348Nd\",\"text\":\"Home_text__FE-HM\",\"padding\":\"Home_padding__1Stm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AnimeList_root__Q_kjR\",\"anime\":\"AnimeList_anime__1SRSM\",\"animeName\":\"AnimeList_animeName__1kJKu\",\"animeEpisodes\":\"AnimeList_animeEpisodes__2dqWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2R_Rn\",\"logo\":\"Header_logo__3_SJs\",\"buttons\":\"Header_buttons__12gv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Register_root__2C-FL\",\"text\":\"Register_text__1K0oy\",\"error\":\"Register_error__1s96k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__4bv6e\",\"text\":\"Login_text__26fLU\",\"error\":\"Login_error__2Rc1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddAnime_root__3ZKlg\",\"text\":\"AddAnime_text__3sfGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AddEpisodes_root__1sewz\",\"text\":\"AddEpisodes_text__YZvIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2bb-J\"};","import React, { Component } from 'react';\nimport s from './AnimeList.module.css';\nimport { Link } from \"react-router-dom\";\n\nclass AnimeList extends Component {\n  render() {\n    const { animes } = this.props;\n    return (\n      <div className={s.root}>\n        {animes && animes.map(anime => (\n          <Link to={`/anime?id=${anime._id.toString()}`} key={anime._id.toString()} className={s.anime}>\n            <div className={s.animeName}>{anime.name}</div>\n            <div className={s.animeEpisodes}>{anime.watched} / {anime.episode_total}</div>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AnimeList;","import React, { Component } from 'react';\nimport s from './Button.module.css';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.props.onClick && this.props.onClick();\n  }\n\n  render() {\n    return (\n      <button onClick={this.onClick} className={[s.root, this.props.className].join(' ')}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\nexport default Button;","import React, { Component } from 'react';\nimport s from './Home.module.css';\nimport AnimeList from '../../components/AnimeList/AnimeList';\nimport Button from '../../components/Button/Button';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className={s.root}>\n        <div className={s.header}>\n          <div className={s.text}>Your List</div>\n          <Link className={s.padding} to=\"/addanime\">\n            <Button>Add another</Button>\n          </Link>\n        </div>\n        <AnimeList animes={this.props.animes} />\n      </div>\n    );\n  }\n}\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport s from './Activity.module.css';\n\nconst groupBy = (array, f) => {\n  let groups = {};\n  array.forEach(function (o) {\n    let group = JSON.stringify(f(o));\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map(function (group) {\n    return groups[group];\n  })\n}\n\nconst calendarFormat = arr => {\n  const values = [];\n\n  let date = arr[0].watchedAt.toLocaleDateString('en-US');\n  let count = 0;\n  arr.forEach(x => {\n    const currentDate = x.watchedAt.toLocaleDateString('en-US');\n    if (date !== currentDate) {\n      values.push({ date, count });\n      date = currentDate;\n      count = 1;\n    } else {\n      count++;\n    }\n  });\n\n  values.push({ date, count });\n  return values;\n}\n\nconst selectByDate = (arr, date) => {\n  const watched = [];\n  arr.forEach(x => {\n    if (x[0].watchedAt.toLocaleDateString('en-US') === date) {\n      watched.push({ anime: x[0].name, count: x.length, date });\n    }\n  });\n\n  return watched;\n}\n\nclass Activity extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      feed: [],\n      calendarData: [],\n      mouseOver: [],\n      mousePosition: [0, 0],\n      hovering: false,\n    }\n  }\n  componentDidMount = async () => {\n    const res = await this.props.displayActivity();\n    const feed = res.length && groupBy(res, function (item) {\n      return [item.anime_id, item.watchedAt.toLocaleDateString('en-US')];\n    });\n\n    const calendarData = res.length && calendarFormat(res);\n\n    this.setState({ feed, calendarData });\n  }\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.hovering && (\n          <div\n            style={{\n              left: this.state.mousePosition[0],\n              top: this.state.mousePosition[1],\n            }}\n            className={s.tooltip}\n          >\n            {this.state.mouseOver && this.state.mouseOver.map(row => (\n              <div key={`${row.anime} - ${row.date}`} className={s.tooltipText}>\n                {row.count} episodes of {row.anime}\n                <span> on {row.date}</span>\n              </div>\n            ))}\n          </div>\n        )}\n        <div className={s.calendar}>\n          <CalendarHeatmap\n            startDate={new Date().setMonth(new Date().getMonth() - 6)}\n            endDate={new Date()}\n            values={(this.state.calendarData.length && this.state.calendarData) || [{ date: new Date('1/1/1990'), count: 1 }]}\n            gutterSize={3}\n            onMouseOver={(event, value) => (\n              value && this.setState({\n                hovering: true,\n                mouseOver: selectByDate(this.state.feed, value.date),\n                mousePosition: [event.clientX, event.clientY]\n              })\n            )}\n            onMouseLeave={() => this.setState({ hovering: false })}\n            classForValue={value => {\n              if (!value) {\n                return s['color-empty'];\n              }\n\n              if (value.count > 6) {\n                return s['color-scale-dark'];\n              }\n\n              return s[`color-scale-${value.count}`];\n            }}\n            transformDayElement={(element, value, index) => (\n              React.cloneElement(element, { rx: '100%' })\n            )}\n          />\n        </div>\n        <div className={s.header}>\n          <div className={s.headerText}>Activity Feed</div>\n        </div>\n        <div className={s.feed}>\n          {this.state.feed.length && this.state.feed.map(group => (\n            <div key={group[0]._id} className={s.row}>\n              <div className={s.text}>\n                {`Watched ${group.length} episodes of `}\n                <Link to={`/anime?id=${group[0].anime_id.toString()}`}>\n                  {group[0].name}\n                </Link>.\n              </div>\n              <div className={s.date}>\n                {group[0].watchedAt.toLocaleDateString(\"en-US\")}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Activity;","import React, { Component } from 'react';\nimport s from './EpisodeList.module.css';\nimport { FaCheck } from 'react-icons/fa';\n\nclass EpisodeList extends Component {\n  render() {\n    const { episodes, toggleEpisode } = this.props;\n    return (\n      <div className={s.root}>\n        {episodes && episodes.map(episode => (\n          <div\n            onClick={() => toggleEpisode(episode.anime_id, episode._id, episode.watched)}\n            key={episode.episode}\n            className={s.episode}\n          >\n            <div className={s.text}>\n              <div className={s.episodeName}>Episode {episode.episode}</div>\n              <div className={s.watchedAt}>\n                {episode.watched && `Watched on ${episode.watchedAt.toLocaleDateString(\"en-US\")}`}\n              </div>\n            </div>\n            {episode.watched &&<FaCheck />}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default EpisodeList;","import React, { Component } from 'react';\nimport { BSON } from \"mongodb-stitch-browser-sdk\";\nimport { Redirect } from \"react-router-dom\";\nimport s from './Anime.module.css';\nimport EpisodeList from '../../components/EpisodeList/EpisodeList';\nimport Button from '../../components/Button/Button';\n\nclass Anime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anime: {},\n      episodes: [],\n      home: false,\n      deleting: false,\n    };\n\n    this.delete = this.delete.bind(this);\n    this.toggleEpisode = this.toggleEpisode.bind(this);\n  }\n\n  componentDidMount = async () => {\n    const id = new URLSearchParams(this.props.location.search).get('id');\n    const objectId = new BSON.ObjectId(id);\n    const [ anime ] = await this.props.displayAnimes({ _id: objectId });\n\n    const episodes = await this.props.displayEpisodes(objectId);\n    this.setState({ anime, episodes });\n  }\n\n  delete = async () => {\n    this.setState({ deleting: true });\n\n    await this.props.deleteAnime(this.state.anime._id);\n\n    this.setState({ home: true, deleting: false })\n  }\n\n  toggleEpisode = async (anime_id, episodeId, watched) => {\n    // TODO: watched on specific date\n    const { _id } = this.state.anime;\n    await this.props.toggleEpisode(anime_id, episodeId, watched);\n    const episodes = await this.props.displayEpisodes(_id);\n    this.setState({ episodes });\n  }\n\n  render() {\n    const { anime, episodes, home, deleting } = this.state;\n\n    return (\n      <div className={s.root}>\n        {home && <Redirect to=\"/\" />}\n        <div className={s.header}>\n          <div className={s.description}>\n            <div className={s.name}>{anime.name}</div>\n            <div className={s.watched}>\n              {anime.watched} / {anime.episode_total} watched\n            </div>\n          </div>\n          <div className={s.deleteColumn}>\n            <Button onClick={this.delete}>Delete</Button>\n            {deleting && <div className={s.deleting}>Deleting anime..</div>}\n          </div>\n        </div>\n        <EpisodeList\n          toggleEpisode={this.toggleEpisode}\n          episodes={episodes}\n        />\n      </div>\n    );\n  }\n}\nexport default Anime;","import React, { Component } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport s from './Input.module.css';\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange = e => {\n    e.preventDefault();\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <input\n        onChange={this.onChange}\n        placeholder={this.props.placeholder}\n        type={this.props.type || 'text'}\n        value={this.props.value}\n      />\n    );\n  }\n}\nexport default Input;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './AddAnime.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass AddAnime extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      episodes: '',\n      home: false,\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.changeEpisodes = this.changeEpisodes.bind(this);\n  }\n\n  onClick = async () => {\n    const { name, episodes } = this.state;\n    await this.props.addAnime({ name, episodes });\n\n    this.setState({ home: true });\n  }\n\n  changeEpisodes = episodes => {\n    if (!isNaN(episodes)) {\n      this.setState({ episodes });\n    }\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.home && <Redirect to=\"/\" />}\n        <div className={s.text}>\n          Add an anime\n        </div>\n        <Input\n          onChange={name => this.setState({ name })}\n          placeholder=\"Name\"\n          type=\"text\"\n          value={this.state.name}\n        />\n        <Input\n          onChange={this.changeEpisodes}\n          placeholder=\"# Episodes Total\"\n          type=\"text\"\n          value={this.state.episodes}\n        />\n        <Button onClick={this.onClick}>Add anime</Button>\n      </div>\n    );\n  }\n}\nexport default AddAnime;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './AddEpisodes.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass AddEpisodes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      date: '',\n      episodes: '',\n      home: false,\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick = async () => {\n    const { name, date, episodes } = this.state;\n    \n    const [ anime ] = await this.props.displayAnimes({ name });\n    await this.props.watchEpisodes(anime._id, parseInt(episodes), new Date(date));\n\n    this.setState({ home: true });\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.home && <Redirect to=\"/\" />}\n        <div className={s.text}>\n          Add episodes\n        </div>\n        <Input\n          onChange={name => this.setState({ name })}\n          placeholder=\"Anime\"\n          type=\"text\"\n          value={this.state.name}\n        />\n        <Input\n          onChange={episodes => this.setState({ episodes })}\n          placeholder=\"Episodes watched\"\n          value={this.state.episodes}\n        />\n        <Input\n          onChange={date => this.setState ({ date })}\n          placeholder=\"Date watched (MM/DD/YYYY)\"\n          type=\"text\"\n          value={this.state.date}\n        />\n        <Button onClick={this.onClick}>Add episodes</Button>\n      </div>\n    );\n  }\n}\nexport default AddEpisodes;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport s from './Register.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordVerification: '',\n      error: null,\n      toLogin: false,\n    };\n\n    this.register = this.register.bind(this);\n  }\n\n  register = async () => {\n    const { registerUser } = this.props;\n    const { email, password, passwordVerification } = this.state;\n\n    if (password !== passwordVerification) {\n      this.setState({ error: 'Passwords do not match' });\n\n      return;\n    }\n\n    const res = await registerUser({ email, password })\n\n    if (res && res.stack && res.message) {\n      this.setState({ error: res.message});\n\n      return;\n    }\n\n    console.log(res);\n\n    this.setState({ toLogin: true });\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        {this.state.toLogin && <Redirect to=\"/login\" />}\n        <div className={s.text}>\n          Create a new account\n        </div>\n        <Input\n          onChange={email => this.setState({ email })}\n          placeholder=\"Email\"\n          type=\"text\"\n          value={this.state.email}\n        />\n        <Input\n          onChange={password => this.setState({ password })}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n        />\n        <Input\n          onChange={passwordVerification => this.setState({ passwordVerification })}\n          placeholder=\"Verify password\"\n          type=\"password\"\n          value={this.state.passwordVerification}\n        />\n        <Button onClick={this.register}>Sign in</Button>\n        {this.state.error &&\n          <div className={s.error}>{this.state.error}</div>\n        }\n      </div>\n    );\n  }\n}\nexport default Login;","import React, { Component } from 'react';\nimport s from './Login.module.css';\nimport Button from '../../components/Button/Button';\nimport Input from '../../components/Input/Input';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.login = this.login.bind(this);\n  }\n\n  login = () => {\n    const { loginUser } = this.props;\n    const { email, password } = this.state;\n\n    loginUser({ email, password }).catch(err => {\n      this.setState({ error: err.message })\n    })\n  }\n\n  render() {\n    return (\n      <div className={s.root}>\n        <div className={s.text}>\n          Sign in\n        </div>\n        <Input\n          onChange={email => this.setState({ email })}\n          placeholder=\"Email\"\n          type=\"text\"\n          value={this.state.email}\n        />\n        <Input\n          onChange={password => this.setState({ password })}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={this.state.password}\n        />\n        <Button onClick={this.login}>Sign in</Button>\n        {this.state.error &&\n          <div className={s.error}>{this.state.error}</div>\n        }\n      </div>\n    );\n  }\n}\nexport default Login;","import React, { Component } from 'react';\nimport s from './Header.module.css';\nimport { Link } from \"react-router-dom\";\n\nconst logout = logoutFunc => (\n  <div className={s.buttons}>\n    <Link to=\"/\">My Feed</Link>\n    <Link to=\"/List\">My List</Link>\n    <Link to=\"/AddAnime\">Add Anime</Link>\n    <Link to=\"/AddEpisodes\">Add Episodes</Link>\n    <div onClick={() => logoutFunc()} >Logout</div>\n  </div>\n);\n\nconst login = (\n  <div className={s.buttons}>\n    <Link to=\"/login\">Login</Link>\n    <Link to=\"/register\">Register</Link>\n  </div>\n);\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className={s.root}>\n        <Link to=\"/\" className={s.logo}>Sugoi</Link>\n        {this.props.isAuthed ? logout(this.props.logout) : login}\n      </div>\n    );\n  }\n}\nexport default Header;","import React, { Component } from \"react\";\nimport { BSON, Stitch, RemoteMongoClient, UserPasswordCredential } from \"mongodb-stitch-browser-sdk\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport APP_ID from './constants/constants';\nimport Home from \"./routes/Home/Home\";\nimport Activity from \"./routes/Activity/Activity\";\nimport Anime from \"./routes/Anime/Anime\";\nimport AddAnime from \"./routes/AddAnime/AddAnime\";\nimport AddEpisodes from \"./routes/AddEpisodes/AddEpisodes\";\nimport Register from \"./routes/Register/Register\";\nimport Login from \"./routes/Login/Login\";\nimport Header from \"./components/Header/Header\";\n\nconst client = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nconst mongoClient = client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      animes: [],\n      isAuthed: false,\n      userId: null,\n    };\n\n    this.db = mongoClient.db(\"sugoi\");\n\n    this.register = this.register.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.displayEpisodes = this.displayEpisodes.bind(this);\n    this.displayAnimes = this.displayAnimes.bind(this);\n    this.addAnime = this.addAnime.bind(this);\n    this.deleteAnime = this.deleteAnime.bind(this);\n  }\n\n  componentDidMount = () => {\n    if (client.auth.hasRedirectResult()) {\n      client.auth.handleRedirectResult().then(user => {\n        this.setState({ isAuthed: client.auth.isLoggedIn })\n      })\n    }\n  }\n\n  addAnime = async anime => {\n    // insert the anime into the remote Stitch DB\n    // then re-query the DB and display the new animes\n    const res = await this.db\n      .collection('animes')\n      .insertOne({\n        owner_id: this.state.userId,\n        name: anime.name,\n        watched: 0,\n        episode_total: parseInt(anime.episodes),\n      });\n\n    await this.addEpisodes(res.insertedId, anime.name, anime.episodes);\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n\n    return res;\n  }\n\n  deleteAnime = async _id => {\n    // delete animes and episodes with _id\n    await this.db\n      .collection('animes')\n      .deleteOne({ _id });\n\n    await this.db\n      .collection('episodes')\n      .deleteMany({ anime_id: _id });\n\n    const animes = await this.displayAnimes();\n    this.setState({ animes });\n  }\n\n  incrementWatched = async (_id, count) => {\n    const res = await this.db\n      .collection('animes')\n      .updateOne( { _id }, { $inc: { watched: count } } )\n\n    return res;\n  }\n\n  displayAnimes = async (params = {}) => {\n    // query the remote DB and update the component state\n    const animes = await this.db\n      .collection('animes')\n      .find(params, { limit: 1000 })\n      .asArray();\n\n    return animes;\n  }\n\n  addEpisodes = async (anime_id, name, episode_total) => {\n    // create array of episodes then insert them into collection episodes\n    const episodes = [];\n\n    for (let i = 1; i <= episode_total; i++) {\n      const episode = {\n        anime_id,\n        name,\n        owner_id: this.state.userId,\n        episode: i,\n        watched: false,\n        watchedAt: new Date(),\n      };\n\n      episodes.push(episode);\n    }\n\n    await this.db\n      .collection('episodes')\n      .insertMany(episodes);\n\n    const displayed = await this.displayEpisodes(anime_id);\n\n    return displayed\n  }\n\n  displayEpisodes = async anime_id => {\n    const episodes = await this.db\n      .collection('episodes')\n      .find({ anime_id }, { limit: 1000 })\n      .asArray();\n\n    return episodes;\n  }\n\n  toggleEpisode = async (anime_id, _id, watched) => {\n    const res = await this.db\n      .collection('episodes')\n      .updateOne({ _id }, { $set: { watched: !watched, watchedAt: new Date() } });\n    console.log(watched, res);\n\n    await this.incrementWatched(anime_id, watched ? -1 : 1);\n  }\n\n  watchEpisodes = async (anime_id, count, watchedAt = new Date()) => {\n    const selection = await this.db\n      .collection('episodes')\n      .find({ anime_id, watched: false }, { limit: count })\n      .asArray();\n    \n    const ids = selection.map(x => x._id);\n\n    await this.db\n      .collection('episodes')\n      .updateMany({ _id: {$in: ids} }, { $set: { watched: true, watchedAt } });\n\n    await this.incrementWatched(anime_id, count);\n  }\n\n  displayActivity = async () => {\n    const episodes = await this.db\n    .collection('episodes')\n    .find({ watched: true }, { limit: 1000, sort: { watchedAt: -1 } })\n    .asArray();\n\n    return episodes;\n  }\n\n  register = async ({ email, password } = {}) => {\n    try {\n      const res = await mongoClient.registerWithEmail(email, password);\n\n      return res;\n    } catch (e) {\n        return e;\n    }\n  }\n\n  login = async ({ email, password } = {}) => {\n    const { isAuthed } = this.state\n\n    if (isAuthed) {\n      return\n    }\n\n    const credential = new UserPasswordCredential(email, password)\n    const res = await client.auth.loginWithCredential(credential)\n    const animes = await this.displayAnimes();\n\n    this.setState({\n      animes,\n      isAuthed: true,\n      userId: new BSON.ObjectId(res.id),\n    })\n  }\n\n  logout = async () => {\n    client.auth.logout()\n    this.setState({ isAuthed: false })\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Header isAuthed={this.state.isAuthed} logout={this.logout} />\n        {this.state.isAuthed ? (\n            <Switch>\n              <Redirect from=\"/login\" to=\"/\" />\n              <Redirect from=\"/register\" to=\"/\" />\n              <Route\n                default\n                exact\n                path=\"/\"\n                render={props => <Activity\n                  {...props}\n                  displayActivity={this.displayActivity}\n                />}\n              />\n              <Route\n                path=\"/list\"\n                render={props => <Home\n                  {...props}\n                  episodeStream={this.episodeStream}\n                  animes={this.state.animes}\n                />}\n              />\n              <Route\n                path=\"/anime\"\n                render={props => <Anime\n                  {...props}\n                  toggleEpisode={this.toggleEpisode}\n                  displayAnimes={this.displayAnimes}\n                  displayEpisodes={this.displayEpisodes}\n                  deleteAnime={this.deleteAnime}\n                />}\n              />\n              <Route\n                path=\"/addanime\"\n                render={props => <AddAnime\n                  {...props}\n                  addAnime={this.addAnime}\n                />}\n              />\n              <Route\n                path=\"/addepisodes\"\n                render={props => <AddEpisodes\n                  {...props}\n                  watchEpisodes={this.watchEpisodes}\n                  displayAnimes={this.displayAnimes}\n                />}\n              />\n            </Switch>\n          ) : (\n            <Switch>\n              <Route\n                default\n                exact\n                path=\"/login\"\n                render={props => <Login {...props} loginUser={this.login} />}\n              />\n              <Route\n                path=\"/register\"\n                render={props => <Register {...props} registerUser={this.register} />}\n              />\n            </Switch>\n        )}\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","const APP_ID = 'sago-ghffe';\n\nexport default APP_ID;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}